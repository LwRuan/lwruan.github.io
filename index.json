[{"authors":null,"categories":null,"content":"Liangwang Ruan(阮良旺) is a senior student from Turing Class, Peking University, currently advised by Prof. Baoquan Chen at Center on Frontiers of Computing Studies (CFCS) and Dr. Bin Wang from Advanced Innovation Center for Future Visual Entertainment (AICFVE).\n","date":1619827200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1619827200,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Liangwang Ruan(阮良旺) is a senior student from Turing Class, Peking University, currently advised by Prof. Baoquan Chen at Center on Frontiers of Computing Studies (CFCS) and Dr. Bin Wang from Advanced Innovation Center for Future Visual Entertainment (AICFVE).","tags":null,"title":"Liangwang Ruan","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":["Liangwang Ruan"],"categories":["Website"],"content":"Why Hugo? The main reason I switch to Hugo is that I find many researchers use Hugo Academic(now named as Wowchemy) to build their website rather than Jekyll. After finishing the migration to Hugo, I understand why. Essentially Hugo and Jekyll are both static content generators, but Hugo Academic has more good built-in features like publication pages, project pages, and presentation pages. The configuration for Hugo is also much easier since I don\u0026rsquo;t have to deal with those extensions. Although Hugo might not be as flexible as Jekyll, it can cover most of my demands without great effort.\nSet Up Hugo Academic does not work like other Hugo themes, so Hugo\u0026rsquo;s tutorial is not adequate. Wowchemy offers a tutorial on its website, but it\u0026rsquo;s based on its online platform using Netlify. To keep things simple, the best way to build a website is to directly clone their Github repository starter-academic and put it in your \u0026lt;user-name\u0026gt;.github.io repository. To preview the website, go to the repository\u0026rsquo;s folder and run hugo server. Running hugo can generate the website under the public folder, this behavior can be changed using --publishDir.\nI use a Github Action to publish my website following the instruction from Hugo Tutorial. Whenever I commit to master branch, the action can be automatically triggered, running commands to publish the website to gh-pages branch. The action\u0026rsquo;s configuration file is in .github/workflows/gh-pages.yml:\nname: github pages on: push: branches: - master # Set a branch to deploy jobs: deploy: runs-on: ubuntu-18.04 steps: - uses: actions/checkout@v2 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: '0.82.1' extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_branch: gh-pages cname: lwruan.com  This workflow use actions-hugo and actions-gh-pages from Shohei Ueda, it does nothing more than using Hugo to generate the website, push the files to gh-pages branch, and add CNAME file in the directory. This process only takes few seconds, after that the files in gh-pages branch are updated. The last thing is to tell Github to find the index.html in gh-pages branch, this can be done in repository\u0026rsquo;s settings.\n","date":1619827200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1619827200,"objectID":"3a4b29c4261f918627cdc9ac047e09cd","permalink":"/post/migration-to-hugo/","publishdate":"2021-05-01T00:00:00Z","relpermalink":"/post/migration-to-hugo/","section":"post","summary":"Build a website using [Hugo Academic](https://wowchemy.com)","tags":["Hugo"],"title":"Migration to Hugo","type":"post"},{"authors":["Liangwang Ruan"],"categories":["Website"],"content":"Reveal.js Reveal.js is a powerful tool to build slides on web using HTML or Markdown. To use it locally is very easy, just download the source code on github and open demo.html you can see the result in your browser. Using it on web page is almost the same, put reveal.js in /assets/reveal.js and modify the path in demo.html to the folder in assets, then everything works.\nReveal.js has natural support of Markdown, which makes it possible for us to integrate it into our jekyll based web page.\nOnline Solutions There are already some solutions to integrate reveal.js in jekyll, like jekyll-revealjs, reveal-jekyll. Most of them use costum plugins to porcess raw html files generated by jekyll to reveal.js\u0026rsquo;s style, this can cause several confusions:\n many previous solutions require you to write every slide in seperate file jekyll defaultly generates html file for every post using its own parser, this may cause images, math equations and codes incompatible with reveal.js for the same reason, it\u0026rsquo;s also inconvinent to directly put md code into html letting reveal.js to process markdown using marked  Spending a lot of time sereaching and testing, I decided to turn to offline solutions.\nPandoc! Pandoc is extremely useful to convert files from one format into another, not surprisingly it supports reveal.js:\npandoc -t revealjs -s -o myslides.html myslides.md -V revealjs-url=https://unpkg.com/reveal.js@3.9.2/  revealjs-url can be local directory like /assets/reveal.js, you can also use other command to specify styles and templates. Notice that the version of your pandoc and reveal.js must be compatible, see more information on this page.\nSet Up Pipeline The first thing to do is to find a place to store markdown files and generated html files. I set up two directories _slides and _slides-md under home directory, then I can create a ruby script generate.rb to generate those slides:\n#!/usr/bin/ruby require 'find' puts \u0026quot;Generate all slides\u0026quot; Find.find('_slides-md') do |path| if path != '_slides-md' output_path = path.sub(\u0026quot;_slides-md/\u0026quot;, \u0026quot;_slides/\u0026quot;).sub(\u0026quot;.md\u0026quot;, \u0026quot;.html\u0026quot;) puts \u0026quot;source file: \u0026quot; + path puts \u0026quot;output file: \u0026quot; + output_path system \u0026quot;pandoc -t revealjs -s -o \u0026quot; + output_path + \u0026quot; \u0026quot; + path + \u0026quot; -V revealjs-url=/assets/reveal.js\u0026quot; end end puts \u0026quot;Start server\u0026quot; exec \u0026quot;bundle exec jekyll serve --draft\u0026quot;  The good thing is that now I can use ruby generate.rb to replace bundle exec jekyll serve and care nothing more.\nNext thing is permalinks. Add _slides to _config.yml\u0026rsquo;s inclusion, then all the slides can be accessed in \u0026lt;home-url\u0026gt;/_slides/\u0026lt;name\u0026gt;.html. I also want an archive page for all slides like BLOG in the navigator, this can be done using collection in jekyll. Noticing that directly set up a collection for _slides it won\u0026rsquo;t work, because we have a bunch of HTML files there rather than Markdown files like those in _posts. To let this work, we can set a collection for _slides-md, then create a navigation page using collection.html in _layouts. At last, the href of each slides need to be reset to _slides rather than [[post.url]], other wise it can only lead to the jekyll-rendered post page. My layout for this page is also listed here:\n--- layout: archive --- \u0026lt;!--[ ] for { }--\u0026gt; [[ content ]] [% assign entries_layout = page.entries_layout | default: 'list' %] \u0026lt;div class=\u0026quot;entries-[[ entries_layout ]]\u0026quot;\u0026gt; [% assign entries = site[page.collection] %] [% assign entries = entries | sort: 'title' %] [%- for post in entries -%] [%- unless post.hidden -%] [% if post.header.teaser %] [% capture teaser %][[ post.header.teaser ]][% endcapture %] [% else %] [% assign teaser = site.teaser %] [% endif %] [% if post.id %] [% assign title = post.title | markdownify | remove: \u0026quot;\u0026lt;p\u0026gt;\u0026quot; | remove: \u0026quot;\u0026lt;/p\u0026gt;\u0026quot; %] [% else %] [% assign title = post.title %] [% endif %] \u0026lt;div class=\u0026quot;[[ include.type | default: 'list' ]]__item\u0026quot;\u0026gt; \u0026lt;article class=\u0026quot;archive__item\u0026quot; itemscope itemtype=\u0026quot;https://schema.org/CreativeWork\u0026quot;\u0026gt; [% if include.type == \u0026quot;grid\u0026quot; and teaser %] \u0026lt;div class=\u0026quot;archive__item-teaser\u0026quot;\u0026gt; \u0026lt;img src=\u0026quot;[[ teaser | relative_url ]]\u0026quot; alt=\u0026quot;\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; [% endif %] \u0026lt;h2 class=\u0026quot;archive__item-title no_toc\u0026quot; itemprop=\u0026quot;headline\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;/_slides/[[ post.url | remove:'/slides/' ]].html\u0026quot; rel=\u0026quot;permalink\u0026quot;\u0026gt;[[ title ]]\u0026lt;/a\u0026gt; \u0026lt;/h2\u0026gt; [% include post__meta.html type=include.type %] [% if post.excerpt %]\u0026lt;p class=\u0026quot;archive__item-excerpt\u0026quot; itemprop=\u0026quot;description\u0026quot;\u0026gt;[[ post.excerpt | markdownify | strip_html | truncate: 160 ]]\u0026lt;/p\u0026gt;[% endif %] \u0026lt;/article\u0026gt; \u0026lt;/div\u0026gt; [%- endunless -%] [%- endfor -%] \u0026lt;/div\u0026gt;  ","date":1600732800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1600732800,"objectID":"a9d7de91e79d3a4a734c6fb1eb893b42","permalink":"/post/blog-setup-day3/","publishdate":"2020-09-22T00:00:00Z","relpermalink":"/post/blog-setup-day3/","section":"post","summary":"Set up my personal website using Jekyll","tags":["Jekyll"],"title":"Blog Setup Day3","type":"post"},{"authors":["Liangwang Ruan"],"categories":["Website"],"content":"Image and Math Support One can easily import image in Markdown using ![image name](image path), another way of doing this is to use html syntax:\n\u0026lt;div align=\u0026quot;center\u0026quot;\u0026gt;\u0026lt;img src=\u0026quot;pic/image.png\u0026quot; alt=\u0026quot;Image\u0026quot; style=\u0026quot;zoom:%;\u0026quot; /\u0026gt;\u0026lt;/div\u0026gt;  In this way you can change the position and size of the image. From official guide, it\u0026rsquo;s recommanded to store all the images in asssets/images/, and also name the image like your post:YY-MM-DD-title.jpg.(html style of image is not originally supported in jekyll, so you might need some trick to set the right path for image)\nTo add math support the most common choice is mathjax. Just add these lines to the default.html layout before \u0026lt;head\u0026gt;:\n\u0026lt;script type=\u0026quot;text/x-mathjax-config\u0026quot;\u0026gt; MathJax.Hub.Config({ tex2jax: {inlineMath: [['$','$'], ['\\\\(','\\\\)']]} }); \u0026lt;/script\u0026gt; \u0026lt;script type=\u0026quot;text/javascript\u0026quot; async src=\u0026quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\u0026quot;\u0026gt;  The config here means you can use $...$ or \\\\(...\\\\) for inline math because $...$ is not naturally support by mathjax.\nCustom Page Style To change some of the default style like fonts, colors, margins one needs to modify some of the settings in layout and css. For me, I don\u0026rsquo;t like the footer to show up in every page, so I go to _includes/footer.html and comment everything in it, then the footer disappear. I also don\u0026rsquo;t like the title links have grey color, so I go to _sass/minimal-mistakes/_variables.scss to change the link-color in it. Here I won\u0026rsquo;t explain every configuration\u0026rsquo;s position to you, but show how I find them.\nBasically every style configuration start from _layouts, every layout file might include components in _includes, the file in _includes tells what to show in every components, and the style of the components are in _sass. If you want to change someting, first you can use the consoler of your web browser (F12 for chrome and firefox) to find the name of the component you want to modify, then search through files in those folders using grep -R to locate the variables you want. One thing to notice is that most colors and fonts are defined in _sass/minimal-mistakes/_variables.scss.\nDrafts Jekyll provide draft function to write post. Put the draft post in _drafts, then use bundle exec jekyll serve --draft, the posts in _drafts will be shown using the day time you run the command.\n","date":1598745600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1598745600,"objectID":"1fd77bf0962c08a40b7973aa8a5ef19b","permalink":"/post/blog-setup-day2/","publishdate":"2020-08-30T00:00:00Z","relpermalink":"/post/blog-setup-day2/","section":"post","summary":"Set up my personal website using Jekyll","tags":["Jekyll"],"title":"Blog Setup Day2","type":"post"},{"authors":["Liangwang Ruan"],"categories":["Website"],"content":"Basic Tools I use jekyll and github page to setup my blog, there are many online tutorials on how to build this thing up already, but you may come cross some detail problems as I do. The basic steps are like this:\n install ruby, bundler and jekyll create a github page repository \u0026lt;user name\u0026gt;.github.io fork a theme repository\u0026rsquo;s master branch, here I use minimal-mistakes and copy everything to your github repository (or use theme repository as template when create your github repository) run bundle install  The first problem is that you need to config Gemfile before you can see your web page, notice that you should config this in remote theme way. Then the second error may occur that the version of github-pages is not compatible with the latest version of jekyll. I solve these problems by config my Gemfile in the following way.\nsource \u0026quot;https://rubygems.org\u0026quot; gem \u0026quot;jekyll\u0026quot;, \u0026quot;~\u0026gt; 3.8.7\u0026quot; # gem \u0026quot;minimal-mistakes-jekyll\u0026quot; gem \u0026quot;github-pages\u0026quot;, \u0026quot;~\u0026gt; 206\u0026quot;, group: :jekyll_plugins gem \u0026quot;wdm\u0026quot;, \u0026quot;~\u0026gt; 0.1.0\u0026quot; if Gem.win_platform? group :jekyll_plugins do gem \u0026quot;jekyll-include-cache\u0026quot; gem \u0026quot;faraday\u0026quot;, \u0026quot;~\u0026gt; 0.17.3\u0026quot; gem \u0026quot;jekyll-feed\u0026quot;, \u0026quot;~\u0026gt; 0.13.0\u0026quot; end  Now you can see your web page by running bundle exec jekyll serve, and also see the remote site after git push.\nHow Jekyll Generate Page The master branch of minimal-mistakes is quite empty, but it\u0026rsquo;s a good start point. First you should look through _config.yml, this is the main configuration file we need to edit. The Step by Step Tutorial is a good document to understand what\u0026rsquo;s going on. Basically the content of web page can be written in markdown or html, the format of the page is specified by Front Matter:\n--- title: \u0026quot;FooBar\u0026quot; layout: default categories: ---  Jekyll can read from this metadata and compile the final web page. All the layout files are in _layouts directory, like default.html, open it you can see it\u0026rsquo;s html with some jekyll syntax. The best example of this pipeline is index.html in home directory:\n--- layout: home author_profile: true ---  home means it uses home.html in _layouts as template, author_profile: true means it includes your profile in home page.\nNow let\u0026rsquo;s write our first post. create a _posts directory, add a markdown file in this format(required by jekyll)YY-MM-DD-title.md in it, write front matter and your content, reopen the server you should see your post in the home page, if you change the layout to any layout in _layouts, you should also see the change.\nIt\u0026rsquo;s not a good idea to specify layout in every post, so jekyll provides a default configuration for different files in _config.yml. Go to this file and scroll down you can see config like this:\ndefaults: # _posts - scope: path: \u0026quot;\u0026quot; type: posts values: layout: single author_profile: true read_time: true comments: true share: true related: true  The config here means all the files in _posts will add these values in its front matter, so actually you can just write title and author in every post, jekyll will automatically generate page using single layout. If you want to do something different, you can also add layout: in front matter, it will override the settings in _config.yml.\nHow Jekyll Organize Pages Most of the time besides writting posts, we also want a page to display all the posts in different categories, this requires us to write an archive page. Pages like archive, curriculum are different from post, they don\u0026rsquo;t need to update so much. We can put them just in home directory like index.html, I prefer to put them in _pages. To do so, we need to include _pages in _config.yml (already included in minimal-mistakes).\nApart from that, we may also want to navigate through these pages in title bar, this configuration is stored in _data/navigation.yml:\nmain: - title: \u0026quot;Quick-Start Guide\u0026quot; url: https://mmistakes.github.io/minimal-mistakes/docs/quick-start-guide /  This config is also straight forward, the problem is how jekyll determine the url for pages.\nIt turns out jekyll uses permalink to config page\u0026rsquo;s position. Suppose you add curriculum.md in _pages like this:\n--- title: \u0026quot;Curriculum\u0026quot; permalink: /curriculum/ layout: single --- Something about yourself.  then this page will show up in \\\u0026lt;user name\\\u0026gt;.github.io/curriculum, to link this url to title bar, you can just change the url\u0026rsquo;s value in navigation.yml to /curriculum/.\nFor all the posts, jekyll also provide default settings for them. In _config.yml, there is a line for permalink. If it\u0026rsquo;s /:categories/:title.html, it means the post you write will be stored in \\\u0026lt;user name\\\u0026gt;.github.io/\\\u0026lt;post's categority\\\u0026gt;/title.html, you can see this document for more information on how to change this.\n","date":1598659200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1598659200,"objectID":"2e2db1a7e3c2dce477265ce80e7adc76","permalink":"/post/blog-setup-day1/","publishdate":"2020-08-29T00:00:00Z","relpermalink":"/post/blog-setup-day1/","section":"post","summary":"Set up my personal website using Jekyll","tags":["Jekyll"],"title":"Blog Setup Day1","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/media/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"/project/example/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Example Project","type":"project"},{"authors":["Liangwang Ruan","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"b59186e601938e3a0b7915267da8e1a0","permalink":"/publication/waterstrider/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/waterstrider/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"}]