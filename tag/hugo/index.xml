<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hugo | Lwruan</title><link>/tag/hugo/</link><atom:link href="/tag/hugo/index.xml" rel="self" type="application/rss+xml"/><description>Hugo</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sat, 01 May 2021 00:00:00 +0000</lastBuildDate><image><url>/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url><title>Hugo</title><link>/tag/hugo/</link></image><item><title>Migration to Hugo</title><link>/post/migration-to-hugo/</link><pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate><guid>/post/migration-to-hugo/</guid><description>&lt;h2 id="why-hugo">Why Hugo?&lt;/h2>
&lt;p>The main reason I switch to Hugo is that I find many researchers use &lt;a href="https://wowchemy.com" target="_blank" rel="noopener">Hugo Academic&lt;/a>(now named as Wowchemy) to build their website rather than Jekyll. After finishing the migration to Hugo, I understand why. Essentially Hugo and Jekyll are both static content generators, but Hugo Academic has more good built-in features like publication pages, project pages, and presentation pages. The configuration for Hugo is also much easier since I don&amp;rsquo;t have to deal with those extensions. Although Hugo might not be as flexible as Jekyll, it can cover most of my demands without great effort.&lt;/p>
&lt;h2 id="set-up">Set Up&lt;/h2>
&lt;p>Hugo Academic does not work like other Hugo themes, so Hugo&amp;rsquo;s tutorial is not adequate. Wowchemy offers a tutorial on its website, but it&amp;rsquo;s based on its online platform using Netlify. To keep things simple, the best way to build a website is to directly clone their Github repository &lt;a href="https://github.com/wowchemy/starter-academic" target="_blank" rel="noopener">starter-academic&lt;/a> and put it in your &lt;code>&amp;lt;user-name&amp;gt;.github.io&lt;/code> repository. To preview the website, go to the repository&amp;rsquo;s folder and run &lt;code>hugo server&lt;/code>. Running &lt;code>hugo&lt;/code> can generate the website under the &lt;code>public&lt;/code> folder, this behavior can be changed using &lt;code>--publishDir&lt;/code>.&lt;/p>
&lt;p>I use a &lt;a href="https://github.com/features/actions" target="_blank" rel="noopener">Github Action&lt;/a> to publish my website following the instruction from &lt;a href="https://gohugo.io/hosting-and-deployment/hosting-on-github/" target="_blank" rel="noopener">Hugo Tutorial&lt;/a>. Whenever I commit to &lt;code>master&lt;/code> branch, the action can be automatically triggered, running commands to publish the website to &lt;code>gh-pages&lt;/code> branch. The action&amp;rsquo;s configuration file is in &lt;code>.github/workflows/gh-pages.yml&lt;/code>:&lt;/p>
&lt;pre>&lt;code class="language-yml">name: github pages
on:
push:
branches:
- master # Set a branch to deploy
jobs:
deploy:
runs-on: ubuntu-18.04
steps:
- uses: actions/checkout@v2
with:
submodules: true # Fetch Hugo themes (true OR recursive)
fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod
- name: Setup Hugo
uses: peaceiris/actions-hugo@v2
with:
hugo-version: '0.82.1'
extended: true
- name: Build
run: hugo --minify
- name: Deploy
uses: peaceiris/actions-gh-pages@v3
with:
github_token: ${{ secrets.GITHUB_TOKEN }}
publish_branch: gh-pages
cname: lwruan.com
&lt;/code>&lt;/pre>
&lt;p>This workflow use &lt;a href="https://github.com/peaceiris/actions-hugo" target="_blank" rel="noopener">actions-hugo&lt;/a> and &lt;a href="https://github.com/peaceiris/actions-gh-pages" target="_blank" rel="noopener">actions-gh-pages&lt;/a> from &lt;a href="https://github.com/peaceiris" target="_blank" rel="noopener">Shohei Ueda&lt;/a>, it does nothing more than using Hugo to generate the website, push the files to &lt;code>gh-pages&lt;/code> branch, and add &lt;code>CNAME&lt;/code> file in the directory. This process only takes few seconds, after that the files in &lt;code>gh-pages&lt;/code> branch are updated. The last thing is to tell Github to find the &lt;code>index.html&lt;/code> in &lt;code>gh-pages&lt;/code> branch, this can be done in repository&amp;rsquo;s settings.&lt;/p></description></item></channel></rss>